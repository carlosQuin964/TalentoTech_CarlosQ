# -*- coding: utf-8 -*-
"""Laboratorio 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gis6Mfhau1KkUcY8NpzcW7lXQnvH_CER
"""

import pandas as pd

# Saltar las líneas problemáticas con el parámetro on_bad_lines
df = pd.read_csv('example_ventas.xlsx', encoding='latin1', on_bad_lines='skip')

df.head(5)
# Mostrar las primeras filas del DataFrame

df_1

# Ejercicio 1: Muestra las primeras 5 filas del Dataframe
df_1.head(5)

# Ejercicio 2: Muestra las ventas por region del Dataframe
Ventasregion = df_1.groupby('Region')['Ventas'].sum()
print(Ventasregion)

# Ejercicio 3: Filtrar el Dataframe para mostrar solo las ventas realizadas por David
ventas_david = df_1[df_1['Vendedor'] == 'David']
print (ventas_david)

# Ejercicio 4: Calcular el promedio de ventar por region
promedioRegion = df_1.groupby('Region')['Ventas'].mean()
print(promedioRegion)

# Ejercicio 5: Caluclar el promedio de ventas por region con dos decimales
promedio_ventas_por_region = df_1.groupby('Region')['Ventas'].mean().round(2)
print(promedio_ventas_por_region)

# Ejercicio 6 Ordenar el Dataframe por ventas en orden descendente
df_orden_desc = df_1.sort_values(by='Ventas', ascending=False)
print(df_orden_desc)

# Ejercicio 7: Filtrar las filas con ventas mayores a 10000 y ordenar de mayor a menos
df_filtrado_ordenado = df_1[df_1['Ventas']>10000].sort_values(by='Ventas', ascending=False)
print(df_filtrado_ordenado)

# Ejercicio 9: Eliminar la columna "Vendedor"
df_sin_vendedor = df_1.drop(columns=['Vendedor'])
print(df_sin_vendedor)

# Ventas totales por vendedor
df_ventas_por_vendedor = df_1.groupby('Vendedor')['Ventas'].sum()
print(df_ventas_por_vendedor)

# Ventas por producto y vendedor
df_ventas_por_vendedoryproducto = df_1.groupby(['Producto','Vendedor'])['Ventas'].sum()
print(df_ventas_por_vendedoryproducto)

# Ventas por vendedor en cada region
df_ventas_por_vendedorenregion = df_1.groupby(['Region','Vendedor'])['Ventas'].sum()
print(df_ventas_por_vendedorenregion)

# Ventas totales
df_ventas_totales = df_1['Ventas'].sum()
print(df_ventas_totales)

# Porcentaje de ventas de cada vendedor sobre el total
df_porcentaje_ventas_vendedor = df_1.groupby('Vendedor')['Ventas'].sum()/df_ventas_totales*100
df_porcentaje_ventas_vendedor_Descen = df_porcentaje_ventas_vendedor.sort_values(ascending=False).round(2)
print(df_porcentaje_ventas_vendedor_Descen)

# convierte la columna fechas a tipo Datetime
df_1['Fecha'] = pd.to_datetime(df_1['Fecha'])
# Crea el Dataframe de ventas totales por mes
df_ventas_por_mes = df_1.groupby(df_1['Fecha'].dt.to_period('M'))['Ventas'].sum()
print(df_ventas_por_mes)

# Porcentaje de ventas por region sobre el total
df_porcentaje_ventas_region = df_1.groupby('Region')['Ventas'].sum()/df_ventas_totales*100
df_porcentaje_ventas_region_descen = df_porcentaje_ventas_region.sort_values(ascending=False).round(2)
print(df_porcentaje_ventas_region_descen)

# Region que mas vende y cuanto vende
print(VentasRegion.idxmax())
print(VentasRegion.max())

# Vendedor que mas vende y cuanto vende
print(df_ventas_por_vendedor.idxmax())
print(df_ventas_por_vendedor.max())
